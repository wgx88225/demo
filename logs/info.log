2022-02-21 09:53:59.684 [main] INFO  traceId[] com.example.demo.DemoApplication:55 - Starting DemoApplication on DESKTOP-6OUD5PV with PID 25500 (E:\workplace\idea\demo\target\classes started by Administrator in E:\workplace\idea\demo)
2022-02-21 09:53:59.686 [main] INFO  traceId[] com.example.demo.DemoApplication:651 - No active profile set, falling back to default profiles: default
2022-02-21 09:54:00.242 [main] INFO  traceId[] o.s.d.r.config.RepositoryConfigurationDelegate:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-02-21 09:54:00.243 [main] INFO  traceId[] o.s.d.r.config.RepositoryConfigurationDelegate:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-02-21 09:54:00.273 [main] INFO  traceId[] o.s.d.r.config.RepositoryConfigurationDelegate:187 - Finished Spring Data repository scanning in 20ms. Found 0 Redis repository interfaces.
2022-02-21 09:54:00.445 [main] INFO  traceId[] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:335 - Bean 'threadPoolConfig' of type [com.example.demo.config.ThreadPoolConfig$$EnhancerBySpringCGLIB$$be099f7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-02-21 09:54:00.464 [main] INFO  traceId[] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:335 - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$8a263e40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-02-21 09:54:00.663 [main] INFO  traceId[] io.undertow.servlet:364 - Initializing Spring embedded WebApplicationContext
2022-02-21 09:54:00.663 [main] INFO  traceId[] o.s.b.w.s.c.ServletWebServerApplicationContext:285 - Root WebApplicationContext: initialization completed in 940 ms
2022-02-21 09:54:00.716 [main] INFO  traceId[] c.example.demo.config.ThreadPoolExecutorMdcWrapper:181 - Initializing ExecutorService 'threadPoolTaskExecutor'
2022-02-21 09:54:00.795 [main] INFO  traceId[] c.a.d.s.b.a.DruidDataSourceAutoConfigure:56 - Init DruidDataSource
2022-02-21 09:54:01.758 [main] INFO  traceId[] com.alibaba.druid.pool.DruidDataSource:990 - {dataSource-1} inited
2022-02-21 09:54:03.454 [main] INFO  traceId[] o.s.scheduling.concurrent.ThreadPoolTaskScheduler:181 - Initializing ExecutorService 'taskScheduler'
2022-02-21 09:54:03.484 [main] INFO  traceId[] io.undertow:117 - starting server: Undertow - 2.1.3.Final
2022-02-21 09:54:03.488 [main] INFO  traceId[] org.xnio:95 - XNIO version 3.8.0.Final
2022-02-21 09:54:03.494 [main] INFO  traceId[] org.xnio.nio:59 - XNIO NIO Implementation Version 3.8.0.Final
2022-02-21 09:54:03.515 [main] INFO  traceId[] org.jboss.threads:52 - JBoss Threads version 3.1.0.Final
2022-02-21 09:54:03.547 [main] INFO  traceId[] o.s.boot.web.embedded.undertow.UndertowWebServer:133 - Undertow started on port(s) 9090 (http)
2022-02-21 09:54:03.555 [main] INFO  traceId[] com.example.demo.DemoApplication:61 - Started DemoApplication in 4.216 seconds (JVM running for 5.242)
2022-02-21 10:06:56.614 [XNIO-1 task-1] INFO  traceId[] io.undertow.servlet:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-21 10:06:56.614 [XNIO-1 task-1] INFO  traceId[] org.springframework.web.servlet.DispatcherServlet:525 - Initializing Servlet 'dispatcherServlet'
2022-02-21 10:06:56.621 [XNIO-1 task-1] INFO  traceId[] org.springframework.web.servlet.DispatcherServlet:547 - Completed initialization in 6 ms
2022-02-21 10:06:56.715 [XNIO-1 task-1] INFO  traceId[f145a216-766a-4a66-b562-626843aad035] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"分布式表示结构","serialNumber":1},{"correct":false,"option":"分布式应用结构","serialNumber":2},{"correct":false,"option":"分布式数据和应用结构","serialNumber":3},{"correct":true,"option":"分布式数据结构","serialNumber":4}],"queSetId":2,"remark":"【2010 年题 34 解析】 客户机/服务器系统开发时可以采用不同的分布式计算架构： ①分布式表示架构是将表示层和表示逻辑层迁移到客户机，应用逻辑层、数据处理层和 数据层仍保留在服务器上； ②分布式数据架构是将数据层和数据处理层放置于服务器，应用逻辑层、表示逻辑层和 表示层放置于客户机； ③分布式数据和应用架构是将数据层和数据处理层放置在数据服务器上，应用逻辑层放 置在应用服务器上，表示逻辑层和表示层放置在客户机上。 【答案】D。","topicDesc":"【2010 年题 34】在客户机/服务器系统开发中，采用( )时，应将数据层和数据处理层 放置于服务器，应用逻辑层、表示逻辑层和表示层放置于客户机。 ","topicType":1,"updateB":"0"}
2022-02-21 10:06:56.847 [XNIO-1 task-1] INFO  traceId[f145a216-766a-4a66-b562-626843aad035] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 10:17:13.343 [XNIO-1 task-1] INFO  traceId[77712045-c103-41d3-8909-ed1139dff9c2] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 10:17:13.353 [XNIO-1 task-1] INFO  traceId[3229f8e7-b931-447f-92c4-bf1880cf77ae] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 10:17:36.933 [XNIO-1 task-1] INFO  traceId[ae2436ac-1333-400e-968b-ccf6432839a4] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"\\profile\\upload\\common-resource\\pmp\\58428455-03f0-42cb-91a0-20cc42819fc4.png","optionItem":[{"correct":false,"option":"在功能划分上将各个模块独立起来","serialNumber":1},{"correct":false,"option":"在硬件构件的混合和替换方面不是很灵活","serialNumber":2},{"correct":true,"option":"没有清晰地说明用户怎样与其交互","serialNumber":3},{"correct":false,"option":"没有明确的层次关系，没有强调功能之间的交互","serialNumber":4}],"queSetId":2,"remark":"【2010 年题 41 解析】 本题主要考查架构评审和软件架构设计的应用。根据图中示波器的功能描述，结合示波 器常见的功能和使用方式，可以看出图中系统设计最大的缺陷在于没有建模系统与外界，特 别是用户之间的交互方式。而与用户的交互无疑是示波器的一个十分重要的功能。 【答案】C。","topicDesc":"【2010 年题 41】某公司欲为某种型号的示波器开发内置软件。该公司的架构师设计了 如下图所示的软件架构。在软件架构评审时，专家认为该架构存在的问题是( )。","topicType":1,"updateB":"0"}
2022-02-21 10:17:36.957 [XNIO-1 task-1] INFO  traceId[ae2436ac-1333-400e-968b-ccf6432839a4] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 10:24:38.044 [XNIO-1 task-1] INFO  traceId[44603d26-b33a-4fd6-930d-34016fd6d399] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":true,"option":"解释器","serialNumber":1},{"correct":false,"option":"主程序-子程序","serialNumber":2},{"correct":false,"option":"隐式调用","serialNumber":3},{"correct":false,"option":"管道-过滤器","serialNumber":4}],"queSetId":2,"remark":"【2010 年题 43 解析】 本题主要考查架构风格与架构设计策略。本题出题本就不严谨，从描述来看多种架构风 格均合适：过程控制，虚拟机，隐式调用。当次考试参考答案为 C，但从此后的同类问题来 看，答案修改为“虚拟机（解释器，规则系统）”，所以再次出现该类问题，建议首选虚拟 机类风格。 【答案】A。","topicDesc":"【2010 年题 43】某公司欲开发一个漫步者机器人，用来完成火星探测任务。机器人的 控制者首先定义探测任务和任务之间的时序依赖性，机器人接受任务后，需要根据自身 状态和外界环境进行动态调整，最终自动完成任务。针对这些需求，该机器人应该采用 ( )架构风格最为合适。","topicType":1,"updateB":"0"}
2022-02-21 10:24:38.076 [XNIO-1 task-1] INFO  traceId[44603d26-b33a-4fd6-930d-34016fd6d399] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 10:27:02.295 [XNIO-1 task-1] INFO  traceId[e8a419a4-dd9a-4636-a1c2-659145247fc7] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"解释器","serialNumber":1},{"correct":false,"option":"面向对象","serialNumber":2},{"correct":true,"option":"黑板","serialNumber":3},{"correct":false,"option":"隐式调用","serialNumber":4}],"queSetId":2,"remark":"【2010 年题 44 解析】 本题主要考查架构风格与架构设计策略。根据题目描述，语音识别系统是一个十分典型 的专家系统，其特点是求解的正确结果不止一个，求解过程比较复杂，需要通过专家知识和 反馈逐步得到正确结果。因此对比 4 个候选项，黑板结构特别适合求解这类问题，语音识别 是黑板架构风格的典型应用。 【答案】C。","topicDesc":"【2010 年题 44】某公司欲开发一个语音识别系统，语音识别的主要过程包括分割原始 语音信号、识别音素、产生候选词、判定语法片断、提供语义解释等。每个过程都需要 进行基于先验知识的条件判断并进行相应的识别动作。针对该系统的特点，采用( )架 构风格最为合适。","topicType":1,"updateB":"0"}
2022-02-21 10:27:02.329 [XNIO-1 task-1] INFO  traceId[e8a419a4-dd9a-4636-a1c2-659145247fc7] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 10:28:50.219 [XNIO-1 task-1] INFO  traceId[ecd6b098-33c7-469c-945b-a579ca2af4a1] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":true,"option":"架构风格","serialNumber":1},{"correct":false,"option":"开发方法","serialNumber":2},{"correct":false,"option":"设计模式","serialNumber":3},{"correct":false,"option":"分析模式","serialNumber":4}],"queSetId":2,"remark":"【2011 年题 34 解析】 本题主要考查对软件架构风格和设计模式两个概念的掌握与区分。 架构风格描述了一类软件架构的特征，它独立于实际问题，强调软件系统中通用的组织 结构选择。 垃圾回收机制是 Java 语言管理内存资源时常用的一种设计模式。 【答案】A。","topicDesc":"【2011 年题 34】() 描述了一类软件架构的特征，它独立于实际问题，强调软件系 统中通用的组织结构选择。","topicType":1,"updateB":"0"}
2022-02-21 10:28:50.250 [XNIO-1 task-1] INFO  traceId[ecd6b098-33c7-469c-945b-a579ca2af4a1] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 10:29:16.518 [XNIO-1 task-1] INFO  traceId[a0bd5e23-847c-4167-81c0-03fa2122c7fe] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"架构风格","serialNumber":1},{"correct":false,"option":"开发方法","serialNumber":2},{"correct":true,"option":"设计模式","serialNumber":3},{"correct":false,"option":"分析模式","serialNumber":4}],"queSetId":2,"remark":"【2011 年题 34 解析】 本题主要考查对软件架构风格和设计模式两个概念的掌握与区分。 架构风格描述了一类软件架构的特征，它独立于实际问题，强调软件系统中通用的组织 结构选择。 垃圾回收机制是 Java 语言管理内存资源时常用的一种设计模式。 【答案】C。","topicDesc":"【2011 年题 34】(XX) 描述了一类软件架构的特征，它独立于实际问题，强调软件系 统中通用的组织结构选择。垃圾回收机制是 Java 语言管理内存资源时常用的一种 ( ) 。","topicType":1,"updateB":"0"}
2022-02-21 10:29:16.535 [XNIO-1 task-1] INFO  traceId[a0bd5e23-847c-4167-81c0-03fa2122c7fe] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 10:34:22.445 [XNIO-1 task-1] INFO  traceId[c5ce825f-1a75-4f8a-8335-542440b122d9] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"管道-过滤器","serialNumber":1},{"correct":true,"option":"解释器","serialNumber":2},{"correct":false,"option":"显式调用","serialNumber":3},{"correct":false,"option":"黑板","serialNumber":4}],"queSetId":2,"remark":"【2011 年题 38 解析】 解释器是指在程序语言定义的计算和有效硬件操作确定的计算之间建立对应的联系。完 成信息识别和转换工作。题目中的场景需要用到信息的识别和转换，所以可以用解释器风格。【答案】B。","topicDesc":"【2011 年题 38】某企业内部现有的主要业务功能已经封装为 Web 服务。为了拓展业务 范围，需要将现有的业务功能进行多种组合，形成新的业务功能。针对业务灵活组合这 一要求，采用( )架构风格最为合适。","topicType":1,"updateB":"0"}
2022-02-21 10:34:22.478 [XNIO-1 task-1] INFO  traceId[c5ce825f-1a75-4f8a-8335-542440b122d9] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 10:39:18.513 [XNIO-1 task-1] INFO  traceId[360e4cb7-ed74-40f5-949f-97e3643a9cfb] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":true,"option":"数据共享","serialNumber":1},{"correct":false,"option":"虚拟机","serialNumber":2},{"correct":false,"option":"隐式调用","serialNumber":3},{"correct":false,"option":"管道-过滤器","serialNumber":4}],"queSetId":2,"remark":"【2011 年题 39 解析】 根据题干描述，现代编译器主要关注编译过程和程序的中间表示，围绕程序的各种形态 进行转化与处理。这种情况下，可以针对程序的各种形态构建数据库，通过中心数据库进行 转换与处理。根据上述分析，选项中列举的架构风格中，数据共享风格最符合要求。【答案】A。","topicDesc":"【2011 年题 39】编译器的主要工作过程是将以文本形式输入的代码逐步转化为各种形 式，最终生成可执行代码。现代编译器主要关注编译过程和程序的中间表示，围绕程序 的各种形态进行转化与处理。针对这种特征，现代编译器应该采用( )架构风格最为合 适。","topicType":1,"updateB":"0"}
2022-02-21 10:39:18.540 [XNIO-1 task-1] INFO  traceId[360e4cb7-ed74-40f5-949f-97e3643a9cfb] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 10:40:57.504 [XNIO-1 task-1] INFO  traceId[60bb66f8-0d41-4e4d-93ca-81ae772fa342] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"对于采用层次化架构风格的系统，划分的层次越多，系统的性能越差","serialNumber":1},{"correct":false,"option":"对于采用管道―过滤器架构风格的系统，可以通过引入过滤器的数据并发处理提高 系统性能","serialNumber":2},{"correct":false,"option":"对于采用面向对象架构风格的系统，可以通过减少功能调用层次提高系统性能","serialNumber":3},{"correct":true,"option":"对于采用过程调用架构风格的系统，可以通过将显式调用策略替换为隐式调用策略 提高系统性能","serialNumber":4}],"queSetId":2,"remark":"【2012 年题 33 解析】 本题主要考查对软件架构风格与系统性能之间关系的理解。 对于采用层次化架构风格的系统，划分的层次越多，系统完成某项功能需要的中间调用 操作越多，其性能越差。 对于采用管道-过滤器架构风格的系统，可以通过引入过滤器的数据并发处理可以有效 提高系统性能。 对于采用面向对象架构风格的系统，可以通过减少功能调用层次提高系统性能。 对于采用过程调用架构风格的系统，将显式调用策略替换为隐式调用策略能够提高系统 的灵活性，但会降低系统的性能。 【答案】D。","topicDesc":"【2012 年题 33】以下关于软件架构风格与系统性能关系的叙述，错误的是( )。","topicType":1,"updateB":"0"}
2022-02-21 10:40:57.535 [XNIO-1 task-1] INFO  traceId[60bb66f8-0d41-4e4d-93ca-81ae772fa342] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 10:44:10.500 [XNIO-1 task-1] INFO  traceId[dc61881e-3a75-4b87-853f-5ef6fb3874c4] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"规则引擎","serialNumber":1},{"correct":false,"option":"解释器","serialNumber":2},{"correct":true,"option":"数据共享","serialNumber":3},{"correct":false,"option":"黑板","serialNumber":4}],"queSetId":2,"remark":"【2013 年题 32 解析】IDE 是一种集成式的开发环境，在这种环境中，多种工具是围绕同一数据进行处理，这 种情况适合用数据共享架构风格。 【答案】C。","topicDesc":"【2013 年题 32】随着编译、链接、调试、执行等开发过程的一体化趋势发展，集成开发环境（IDE） 随之出现。IDE 集成了编译器、连接器、调试器等多种工具，支持代码的增量修改与处 理，能够实现不同工具之间的信息交互，覆盖整个软件开发生命周期。针对这种需求， IDE 采用( )架构风格比较合适。","topicType":1,"updateB":"0"}
2022-02-21 10:44:10.534 [XNIO-1 task-1] INFO  traceId[dc61881e-3a75-4b87-853f-5ef6fb3874c4] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 10:45:37.138 [XNIO-1 task-1] INFO  traceId[58c3959a-9a52-4a43-936c-acf58b95aafe] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"代理","serialNumber":1},{"correct":true,"option":"适配","serialNumber":2},{"correct":false,"option":"包装","serialNumber":3},{"correct":false,"option":"模拟","serialNumber":4}],"queSetId":2,"remark":"【2013 年题 32 解析】“使 IDE 能够生成符合新操作系统要求的运行代码”，这一要求是可以通过适配策略 满足的，像设计模式中的适配器模式便是采用适配的方式，形成一致的接口。【答案】B。","topicDesc":"【2013 年题 32】某公司已经开发了一款针对某种嵌入式操作系统专用编程语言的 IDE，随着一种新 的嵌入式操作系统上市并迅速占领市场，公司决定对 IDE 进行适应性改造，支持采用 现有编程语言进行编程，生成符合新操作系统要求的运行代码，并能够在现有操作系统 上模拟出新操作系统的运行环境，以支持代码调试工作。针对上述要求，为了使 IDE 能够生成符合新操作系统要求的运行代码，采用基于( )的架构设计策略比较合适；","topicType":1,"updateB":"0"}
2022-02-21 10:45:37.173 [XNIO-1 task-1] INFO  traceId[58c3959a-9a52-4a43-936c-acf58b95aafe] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 11:01:17.770 [XNIO-1 task-1] INFO  traceId[408c3a33-b71c-4baa-829b-b06fa02eb786] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":true,"option":"规则系统","serialNumber":1},{"correct":false,"option":"过程控制","serialNumber":2},{"correct":false,"option":"分层","serialNumber":3},{"correct":false,"option":"管道-过滤器","serialNumber":4}],"queSetId":2,"remark":"【2017 年题 35 解析】 根据题目的意思，拟开发的 VIP 管理系统中 VIP 会员审核标准要能随时改变，灵活定 义。在这方面虚拟机风格最为擅长，而属于虚拟机风格的只有 A 选项。【答案】A。","topicDesc":"【2017 年题 35】某公司拟开发一个 VIP 管理系统，系统需要根据不同商场活动，不定 期更新 VIP 会员的审核标准和 VIP 折扣系统。针对上述需求，采用( )架构风格最为 合适。","topicType":1,"updateB":"0"}
2022-02-21 11:01:17.811 [XNIO-1 task-1] INFO  traceId[408c3a33-b71c-4baa-829b-b06fa02eb786] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 11:02:29.848 [XNIO-1 task-1] INFO  traceId[7f581b95-009f-4494-9edc-391279ff9ee1] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":true,"option":"事件驱动系统","serialNumber":1},{"correct":false,"option":"主程序-子程序","serialNumber":2},{"correct":false,"option":"黑板","serialNumber":3},{"correct":false,"option":"管道-过滤器","serialNumber":4}],"queSetId":2,"remark":"【2017 年题 36 解析】 根据题目的意思，用户会注册自己的兴趣，然后系统也会把新闻按兴趣分类，如果某个 新闻事件发生，可以通过事件来触发推送动作，将新闻推送给对其感兴趣的用户。这是典型 的事件驱动系统应用场景。。【答案】A。","topicDesc":"【2017 年题 36】某公司拟开发一个新闻系统，该系统可根据用户的注册兴趣，向用户 推送其感兴趣的新闻内容，该系统应该采用( )架构风格最为合适。","topicType":1,"updateB":"0"}
2022-02-21 11:02:29.881 [XNIO-1 task-1] INFO  traceId[7f581b95-009f-4494-9edc-391279ff9ee1] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 11:04:58.758 [XNIO-1 task-1] INFO  traceId[828ed939-ba6e-41ff-9a6c-3cf70792f8de] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"注册表","serialNumber":1},{"correct":true,"option":"中央数据结构","serialNumber":2},{"correct":false,"option":"事件","serialNumber":3},{"correct":false,"option":"数据库","serialNumber":4}],"queSetId":2,"remark":"【2018 年题 34 解析】 在仓库风格中,有两种不同的构件:中央数据结构说明当前状态，独立构件在中央数据存贮上执行。【答案】B。","topicDesc":"【2018 年题 34】在仓库风格中，有两种不同的构件，其中，（XX）说明当前状态","topicType":1,"updateB":"0"}
2022-02-21 11:04:58.788 [XNIO-1 task-1] INFO  traceId[828ed939-ba6e-41ff-9a6c-3cf70792f8de] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 11:05:48.452 [XNIO-1 task-1] INFO  traceId[65727458-3fb5-4d8d-af1a-929cf243bfc2] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":true,"option":"独立构件","serialNumber":1},{"correct":false,"option":"数据结构","serialNumber":2},{"correct":false,"option":"知识源","serialNumber":3},{"correct":false,"option":"共享数据","serialNumber":4}],"queSetId":2,"remark":"【2018 年题 34 解析】 在仓库风格中,有两种不同的构件:中央数据结构说明当前状态，独立构件在中央数据存贮上执行。【答案】A。","topicDesc":"【2018 年题 34】在仓库风格中，有两种不同的构件，其中，（XX）说明当前状态，（） 在中央数据存储上执行。","topicType":1,"updateB":"0"}
2022-02-21 11:05:48.468 [XNIO-1 task-1] INFO  traceId[65727458-3fb5-4d8d-af1a-929cf243bfc2] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 11:07:59.040 [XNIO-1 task-1] INFO  traceId[99a6b34b-3add-4c46-b63c-83b2132c4b20] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"风险点和敏感点","serialNumber":1},{"correct":false,"option":"权衡点和风险点","serialNumber":2},{"correct":true,"option":"权衡点和敏感点","serialNumber":3},{"correct":false,"option":"风险点和非风险点","serialNumber":4}],"queSetId":2,"remark":"【2009 年题 50 解析】 加密子系统的加密级别会对安全性和性能产生影响，一般而言，加密程度越高，安全性 越好，但是其性能会降低；而加密程度越低，安全性越差，但性能一般会提高。因此该子系 统将在安全性和性能两个方面产生冲突，所以该子系统一定属于权衡点和敏感点。【答案】C。","topicDesc":"【2009 年题 50】识别风险点、非风险点、敏感点和权衡点是 ATAM 方法中的关键步 骤。己知针对某系统所做的架构设计中，提高其加密子系统的加密级别将对系统的安全 性和性能都产生非常大的影响，则该子系统一定属于( ) 。","topicType":1,"updateB":"0"}
2022-02-21 11:07:59.080 [XNIO-1 task-1] INFO  traceId[99a6b34b-3add-4c46-b63c-83b2132c4b20] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 11:10:02.229 [XNIO-1 task-1] INFO  traceId[cceadfe2-ea48-4886-9678-324e872cae40] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"风险点","serialNumber":1},{"correct":false,"option":"非风险点","serialNumber":2},{"correct":true,"option":"敏感点","serialNumber":3},{"correct":false,"option":"权衡点","serialNumber":4}],"queSetId":2,"remark":"【2010 年题 51 解析】 本题主要考查软件架构评价的理解和应用。正确识别风险点、非风险点、敏感点和权衡 点是进行软件架构评价的关键步骤。其中敏感点是实现一个特定质量属性的关键特征，该特 征为一个或多个软件构件所共有。系统权衡点会影响一个或多个属性，并对于多个属性来说 都是敏感点。基于该定义，可以看出“改变加密的级别可能会对安全性和性能都产生显著的 影响”正是一个对系统权衡点的描述。【答案】C。","topicDesc":"【2010 年题 51】正确识别风险点、非风险点、敏感点和权衡点是进行软件架构评价的 关键步骤。其中( )是实现一个特定质量属性的关键特征，该特征为一个或多个软件构 件所共有。","topicType":1,"updateB":"0"}
2022-02-21 11:10:02.260 [XNIO-1 task-1] INFO  traceId[cceadfe2-ea48-4886-9678-324e872cae40] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 11:10:30.746 [XNIO-1 task-1] INFO  traceId[be73cb9f-fc21-42a9-960b-564b4d9bd7ec] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"风险点","serialNumber":1},{"correct":false,"option":"非风险点","serialNumber":2},{"correct":false,"option":"敏感点","serialNumber":3},{"correct":true,"option":"权衡点","serialNumber":4}],"queSetId":2,"remark":"【2010 年题 51 解析】 本题主要考查软件架构评价的理解和应用。正确识别风险点、非风险点、敏感点和权衡 点是进行软件架构评价的关键步骤。其中敏感点是实现一个特定质量属性的关键特征，该特 征为一个或多个软件构件所共有。系统权衡点会影响一个或多个属性，并对于多个属性来说 都是敏感点。基于该定义，可以看出“改变加密的级别可能会对安全性和性能都产生显著的 影响”正是一个对系统权衡点的描述。【答案】D。","topicDesc":"【2010 年题 51】正确识别风险点、非风险点、敏感点和权衡点是进行软件架构评价的 关键步骤。其中(XX)是实现一个特定质量属性的关键特征，该特征为一个或多个软件构 件所共有。“改变加密的级别可能会对安全性和性能都产生显著的影响”，这是一个对 系统( )的描述。","topicType":1,"updateB":"0"}
2022-02-21 11:10:30.761 [XNIO-1 task-1] INFO  traceId[be73cb9f-fc21-42a9-960b-564b4d9bd7ec] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 11:22:05.847 [XNIO-1 task-1] INFO  traceId[c62c1494-7005-44db-b8f4-dcf25df57f3b] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":true,"option":"敏感点","serialNumber":1},{"correct":false,"option":"风险点","serialNumber":2},{"correct":false,"option":"非风险点","serialNumber":3},{"correct":false,"option":"权衡点","serialNumber":4}],"queSetId":2,"remark":"【2011 年题 46 解析】 风险点与非风险点不是以标准专业术语形式出现的，只是一个常规概念，即可能引起风 险的因素，可称为风险点。 敏感点是一个或多个构件(和/或构件之间的关系)的特性。研究敏感点可使设计入员或分 析员明确在搞清楚如何实现质量目标时应注意什么权衡点是影响多个质量属性的特性，是多个质量属性的敏感点。例如，改变加密级别可 能会对安全性和性能产生非常重要的影响。提高加密级别可以提高安全性，但可能要耗费更 多的处理时间，影响系统性能。如果某个机密消息的处理有严格的时间延迟要求，则加密级 别可能就会成为一个权衡点。 【答案】A。","topicDesc":"【2011 年题 46】识别风险点、非风险点、敏感点和权衡点是软件架构评估过程中的关 键步骤。针对某系统所作的架构设计中，“系统需要支持的最大并发用户数量直接影响 传输协议和数据格式”描述了系统架构设计中的一个( )；","topicType":1,"updateB":"0"}
2022-02-21 11:22:05.878 [XNIO-1 task-1] INFO  traceId[c62c1494-7005-44db-b8f4-dcf25df57f3b] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 11:22:35.528 [XNIO-1 task-1] INFO  traceId[958f8f25-c417-45f3-b0f8-e42a74254fc5] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"敏感点","serialNumber":1},{"correct":true,"option":"风险点","serialNumber":2},{"correct":false,"option":"非风险点","serialNumber":3},{"correct":false,"option":"权衡点","serialNumber":4}],"queSetId":2,"remark":"【2011 年题 46 解析】 风险点与非风险点不是以标准专业术语形式出现的，只是一个常规概念，即可能引起风 险的因素，可称为风险点。 敏感点是一个或多个构件(和/或构件之间的关系)的特性。研究敏感点可使设计入员或分 析员明确在搞清楚如何实现质量目标时应注意什么权衡点是影响多个质量属性的特性，是多个质量属性的敏感点。例如，改变加密级别可 能会对安全性和性能产生非常重要的影响。提高加密级别可以提高安全性，但可能要耗费更 多的处理时间，影响系统性能。如果某个机密消息的处理有严格的时间延迟要求，则加密级 别可能就会成为一个权衡点。 【答案】B。","topicDesc":"【2011 年题 46】识别风险点、非风险点、敏感点和权衡点是软件架构评估过程中的关 键步骤。针对某系统所作的架构设计中，“系统需要支持的最大并发用户数量直接影响 传输协议和数据格式”描述了系统架构设计中的一个(XX)；“由于系统的业务逻辑目前 尚不清楚，因此现有系统三层架构中的第二层可能会出现功能重复，这会影响系统的可 修改性”描述了系统架构设计中的一个( )。","topicType":1,"updateB":"0"}
2022-02-21 11:22:35.543 [XNIO-1 task-1] INFO  traceId[958f8f25-c417-45f3-b0f8-e42a74254fc5] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 11:29:47.565 [XNIO-1 task-1] INFO  traceId[3a2818c1-a3f6-4073-9f8d-e6bb28357d95] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"系统分析师与架构师","serialNumber":1},{"correct":true,"option":"用户代表与领域专家","serialNumber":2},{"correct":false,"option":"系统拥有者与项目经理","serialNumber":3},{"correct":false,"option":"系统开发与测试人员","serialNumber":4}],"queSetId":2,"remark":"【2014 年题 35 解析】 架构复审一词来自于 ABSD(基于架构的软件设计)。在 ABSD 中，架构设计、文档化和 复审是一个迭代过程。从这个方面来说，在一个主版本的软件架构分析之后，要安排一次由 外部人员（用户代表和领域专家）参加的复审。 复审的目的是标识潜在的风险，及早发现架构设计中的缺陷和错误，包括架构能否满足 需求、质量需求是否在设计中得到体现、层次是否清晰、构件的划分是否合理、文档表达是 否明确、构件的设计是否满足功能与性能的要求等等。 由外部人员进行复审的目的是保证架构的设计能够公正地进行检验，使组织的管理者能 够决定正式实现架构。 【答案】B。","topicDesc":"【2014 年题 35】在对一个软件系统的架构进行设计与确认之后，需要进行架构复审。 架构复审的目的是为了标识潜在的风险，及早发现架构设计中的缺陷和错误。在架构复 审过程中，主要由( )决定架构是否满足需求、质量需求是否在设计中得到体现。","topicType":1,"updateB":"0"}
2022-02-21 11:29:47.595 [XNIO-1 task-1] INFO  traceId[3a2818c1-a3f6-4073-9f8d-e6bb28357d95] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:28:26.042 [XNIO-1 task-1] INFO  traceId[4b8563e4-ee70-413b-819d-e1e8ac7c5388] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"架构视图","serialNumber":1},{"correct":false,"option":"架构描述","serialNumber":2},{"correct":true,"option":"需求说明","serialNumber":3},{"correct":false,"option":"需求建模","serialNumber":4}],"queSetId":2,"remark":"【2014 年题 38 解析】 本题主要考查考生对基于场景的架构分析方法（Scenarios-based Architecture Analysis Method，SAAM）的掌握和理解。SAAM 是卡耐基梅隆大学软件工程研究所的 Kazman 等人 于 1983 年提出的一种非功能质量属性的架构分析分析方法，是最早形成文档并得到广泛应 用的软件架构分析方法。SAAM 的主要输入是问题描述、需求说明和架构描述，其分析过 程主要包括场景开发、架构描述、单个场景评估、场景交互和总体评估。 【答案】C。","topicDesc":"【2014 年题 38】体系结构权衡分析方法(Architecture Tradeoff Analysis Method, ATAM) 是一种常见的系统架构评估框架，该框架主要关注系统的( )","topicType":1,"updateB":"0"}
2022-02-21 14:28:26.073 [XNIO-1 task-1] INFO  traceId[4b8563e4-ee70-413b-819d-e1e8ac7c5388] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:29:14.798 [XNIO-1 task-1] INFO  traceId[647f8988-e48d-4f6b-84c6-2ca6d01d9fdb] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"可测试性","serialNumber":1},{"correct":true,"option":"可用性","serialNumber":2},{"correct":false,"option":"可移植性","serialNumber":3},{"correct":false,"option":"易用性","serialNumber":4}],"queSetId":2,"remark":"【2014 年题 38 解析】 本题主要考查考生对基于场景的架构分析方法（Scenarios-based Architecture Analysis Method，SAAM）的掌握和理解。SAAM 是卡耐基梅隆大学软件工程研究所的 Kazman 等人 于 1983 年提出的一种非功能质量属性的架构分析分析方法，是最早形成文档并得到广泛应 用的软件架构分析方法。SAAM 的主要输入是问题描述、需求说明和架构描述，其分析过 程主要包括场景开发、架构描述、单个场景评估、场景交互和总体评估。 【答案】B。","topicDesc":"【2014 年题 38】体系结构权衡分析方法(Architecture Tradeoff Analysis Method, ATAM) 是一种常见的系统架构评估框架，该框架主要关注系统的(xx)，针对性能( )安全性和 可修改性，在系统开发之前进行分析、评价与折中。","topicType":1,"updateB":"0"}
2022-02-21 14:29:14.813 [XNIO-1 task-1] INFO  traceId[647f8988-e48d-4f6b-84c6-2ca6d01d9fdb] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:31:30.955 [XNIO-1 task-1] INFO  traceId[457cf2ef-6011-47d5-9463-8d005df98462] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"继承性、构件管理和绑定、构件标识、访问控制","serialNumber":1},{"correct":false,"option":"封装性、信息隐藏、独立部署、模块安全性","serialNumber":2},{"correct":true,"option":"多态性、模块封装性、后期绑定和装载、安全性","serialNumber":3},{"correct":false,"option":"构件抽象、可替代性、类型安全性、事务管理","serialNumber":4}],"queSetId":2,"remark":"【2016 年题 22 解析】 “面向构件的编程需要下列基本的支持： 多态性（可替代性）、模块封装性（高层次信息的隐藏）、后期的绑定和装载（部署独 立性）、安全性（类型和模块安全性）。 【答案】C。","topicDesc":"【2016 年题 22】面向构件的编程(Component Oriented Programming，COP)关注于如何 支持建立面向构件的解决方案。面向构件的编程所需要的基本支持包括（）。","topicType":1,"updateB":"0"}
2022-02-21 14:31:30.992 [XNIO-1 task-1] INFO  traceId[457cf2ef-6011-47d5-9463-8d005df98462] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:32:42.055 [XNIO-1 task-1] INFO  traceId[bb20910f-7a3f-438e-a2c4-999eb870e140] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":true,"option":"构件包含了一组需要同时部署的原子构件","serialNumber":1},{"correct":false,"option":"构件可以单独部署，原子构件不能被单独部署","serialNumber":2},{"correct":false,"option":".一个原子构件可以同时在多个构件家族中共享","serialNumber":3},{"correct":false,"option":"一个模块可以看作带有单独资源的原子构件","serialNumber":4}],"queSetId":2,"remark":"【2016 年题 24 解析】 【答案】A。","topicDesc":"【2016 年题 24】关于构件的描述，正确的是（ ）。","topicType":1,"updateB":"0"}
2022-02-21 14:32:42.080 [XNIO-1 task-1] INFO  traceId[bb20910f-7a3f-438e-a2c4-999eb870e140] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:35:14.583 [XNIO-1 task-1] INFO  traceId[2bfef085-2de0-45af-b6d5-cd34fdf4cdb4] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"初始化、互连和集成","serialNumber":1},{"correct":false,"option":"连接、集成和演化","serialNumber":2},{"correct":true,"option":"定制、集成和扩展","serialNumber":3},{"correct":false,"option":"集成、扩展和演化","serialNumber":4}],"queSetId":2,"remark":"【2018 年题 27 解析】 构件组装成软件系统的过程可以分为三个不同的层次定制、集成和扩展。答案 C。","topicDesc":"【2018 年题 27】构件组装成软件系统的过程可以分为三个不同的层次：（ ）。","topicType":1,"updateB":"0"}
2022-02-21 14:35:14.609 [XNIO-1 task-1] INFO  traceId[2bfef085-2de0-45af-b6d5-cd34fdf4cdb4] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:36:35.560 [XNIO-1 task-1] INFO  traceId[2d087a65-5131-461a-8f08-40f0fff715f7] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"Applet、JFC、JSP、Servlet、EJB","serialNumber":1},{"correct":false,"option":"JNDI、IIOP、RMI、EJB、JSP/Servlet","serialNumber":2},{"correct":false,"option":"JDBC、EJB、JSP、Servlet、JCA","serialNumber":3},{"correct":true,"option":"Applet、Servlet、JSP、EJB、Application Client","serialNumber":4}],"queSetId":2,"remark":"【2018 年题 29 解析】 答案：D。","topicDesc":"【2018 年题 29】J2EE 应用系统支持五种不同类型的构件模型，包括（ ）。","topicType":1,"updateB":"0"}
2022-02-21 14:36:35.589 [XNIO-1 task-1] INFO  traceId[2d087a65-5131-461a-8f08-40f0fff715f7] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:40:06.327 [XNIO-1 task-1] INFO  traceId[70adb346-c6ac-48d3-a03b-70c1f097311d] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"领域专家","serialNumber":1},{"correct":true,"option":"领域分析者","serialNumber":2},{"correct":false,"option":"领域设计者","serialNumber":3},{"correct":false,"option":"领域实现者","serialNumber":4}],"queSetId":2,"remark":"【2014 年题 32 解析】 参与 DSSA 的人员可以划分为四种角色：领域专家、领域分析师、领域设计人员和领 域实现人员。 1、领域专家 领域专家可能包括该领域中系统的有经验的用户、从事该领域中系统的需求分析、设计、 实现以及项目管理的有经验的软件工程师等。 领域专家的主要任务包括提供关于领域中系统的需求规约和实现的知识，帮助组织规范 的、一致的领域字典，帮助选择样本系统作为领域工程的依据，复审领域模型、DSSA 等领 域工程产品，等等。 领域专家应该熟悉该领域中系统的软件设计和实现、硬件限制、未来的用户需求及技术 走向等。2、领域分析人员 领域分析人员应由具有知识工程背景的有经验的系统分析员来担任。 领域分析人员的主要任务包括控制整个领域分析过程，进行知识获取，将获取的知识组 织到领域模型中，根据现有系统、标准规范等验证领域模型的准确性和一致性，维护领域模 型。领域分析人员应熟悉软件重用和领域分析方法；熟悉进行知识获取和知识表示所需的技 术、语言和工具；应具有一定的该领域的经验，以便于分析领域中的问题及与领域专家进行 交互；应具有较高的进行抽象、关联和类比的能力；应具有较高的与他人交互和合作的能力。 3、领域设计人员 领域设计人员应由有经验的软件设计人员来担任。 领域设计人员的主要任务包括控制整个软件设计过程，根据领域模型和现有的系统开发 出 DSSA，对 DSSA 的准确性和一致性进行验证，建立领域模型和 DSSA 之间的联系。领域设计人员应熟悉软件重用和领域设计方法；熟悉软件设计方法；应有一定的该领域 的经验，以便于分析领域中的问题及与领域专家进行交互。 4、领域实现人员 领域实现人员应由有经验的程序设计人员来担任。 领域实现人员的主要任务包括根据领域模型和 DSSA，或者从头开发可重用构件，或者 利用再工程的技术从现有系统中提取可重用构件，对可重用构件进行验证，建立 DSSA 与 可重用构件间的联系。 领域实现人员应熟悉软件重用、领域实现及软件再工程技术；熟悉程序设计；具有一定 的该领域的经验。 【答案】B。","topicDesc":"【2014 年题 32】特定领域软件架构(Domain Specific Software Architecture, DSSA)是在一 个特定应用领域中，为一组应用提供组织结构参考的标准软件体系结构。参加 DSSA 的人员可以划分为多种角色，其中( )的任务是控制整个领域分析过程，进行知识获取， 将获取的知识组织到领域模型中。","topicType":1,"updateB":"0"}
2022-02-21 14:40:06.361 [XNIO-1 task-1] INFO  traceId[70adb346-c6ac-48d3-a03b-70c1f097311d] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:40:44.768 [XNIO-1 task-1] INFO  traceId[6ecc7717-1483-40eb-ae70-863fa6d87b91] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"领域专家","serialNumber":1},{"correct":false,"option":"领域分析者","serialNumber":2},{"correct":true,"option":"领域设计者","serialNumber":3},{"correct":false,"option":"领域实现者","serialNumber":4}],"queSetId":2,"remark":"【2014 年题 32 解析】 参与 DSSA 的人员可以划分为四种角色：领域专家、领域分析师、领域设计人员和领 域实现人员。 1、领域专家 领域专家可能包括该领域中系统的有经验的用户、从事该领域中系统的需求分析、设计、 实现以及项目管理的有经验的软件工程师等。 领域专家的主要任务包括提供关于领域中系统的需求规约和实现的知识，帮助组织规范 的、一致的领域字典，帮助选择样本系统作为领域工程的依据，复审领域模型、DSSA 等领 域工程产品，等等。 领域专家应该熟悉该领域中系统的软件设计和实现、硬件限制、未来的用户需求及技术 走向等。2、领域分析人员 领域分析人员应由具有知识工程背景的有经验的系统分析员来担任。 领域分析人员的主要任务包括控制整个领域分析过程，进行知识获取，将获取的知识组 织到领域模型中，根据现有系统、标准规范等验证领域模型的准确性和一致性，维护领域模 型。领域分析人员应熟悉软件重用和领域分析方法；熟悉进行知识获取和知识表示所需的技 术、语言和工具；应具有一定的该领域的经验，以便于分析领域中的问题及与领域专家进行 交互；应具有较高的进行抽象、关联和类比的能力；应具有较高的与他人交互和合作的能力。 3、领域设计人员 领域设计人员应由有经验的软件设计人员来担任。 领域设计人员的主要任务包括控制整个软件设计过程，根据领域模型和现有的系统开发 出 DSSA，对 DSSA 的准确性和一致性进行验证，建立领域模型和 DSSA 之间的联系。领域设计人员应熟悉软件重用和领域设计方法；熟悉软件设计方法；应有一定的该领域 的经验，以便于分析领域中的问题及与领域专家进行交互。 4、领域实现人员 领域实现人员应由有经验的程序设计人员来担任。 领域实现人员的主要任务包括根据领域模型和 DSSA，或者从头开发可重用构件，或者 利用再工程的技术从现有系统中提取可重用构件，对可重用构件进行验证，建立 DSSA 与 可重用构件间的联系。 领域实现人员应熟悉软件重用、领域实现及软件再工程技术；熟悉程序设计；具有一定 的该领域的经验。 【答案】C。","topicDesc":"【2014 年题 32】特定领域软件架构(Domain Specific Software Architecture, DSSA)是在一 个特定应用领域中，为一组应用提供组织结构参考的标准软件体系结构。参加 DSSA 的人员可以划分为多种角色，其中(XX)的任务是控制整个领域分析过程，进行知识获取， 将获取的知识组织到领域模型中；( )的任务是根据领域模型和现有系统开发出 DSSA， 并对 DSSA 的准确性和一致性进行验证。","topicType":1,"updateB":"0"}
2022-02-21 14:40:44.779 [XNIO-1 task-1] INFO  traceId[6ecc7717-1483-40eb-ae70-863fa6d87b91] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:43:07.355 [XNIO-1 task-1] INFO  traceId[e497f79b-9529-4ee1-b1f6-d0bee00c0705] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"实体构件","serialNumber":1},{"correct":false,"option":"加工构件","serialNumber":2},{"correct":false,"option":"服务构件","serialNumber":3},{"correct":true,"option":"会话构件","serialNumber":4}],"queSetId":2,"remark":"【2010 年题 32 解析】 对象管理组织（OMG）基于 CORBA 基础设施定义了四种构件标准。实体（Entity）构 件需要长期持久化并主要用于事务性行为，由容器管理其持久化。加工（Process）构件同 样需要容器管理其持久化，但没有客户端可访问的主键。会话（Session）构件不需要容器 管理其持久化，其状态信息必须由构件自己管理。服务（Service）构件是无状态的。 【答案】D。","topicDesc":"【2010 年题 32】对象管理组织(OMG)基于 CORBA 基础设施定义了四种构件标准。其 中，( )的状态信息是由构件自身而不是由容器维护。","topicType":1,"updateB":"0"}
2022-02-21 14:43:07.388 [XNIO-1 task-1] INFO  traceId[e497f79b-9529-4ee1-b1f6-d0bee00c0705] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:44:44.354 [XNIO-1 task-1] INFO  traceId[226642a0-fdf5-4bb1-a141-448ad45e1fa3] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"伺服对象激活器","serialNumber":1},{"correct":false,"option":"适配器激活器","serialNumber":2},{"correct":false,"option":"伺服对象定位器","serialNumber":3},{"correct":true,"option":"可移植对象适配器 POA","serialNumber":4}],"queSetId":2,"remark":"【2016 年题 23 解析】 【答案】D。","topicDesc":"【2016 年题 23】CORBA（Common Object Request Broker Architecture,公共对象请求代 理体系结构，通用对象请求代理体系结构）构件模型中，（ ）的作用是在底层传输平 台与接收调用并返回结果的对象实现之间进行协调.","topicType":1,"updateB":"0"}
2022-02-21 14:44:44.385 [XNIO-1 task-1] INFO  traceId[226642a0-fdf5-4bb1-a141-448ad45e1fa3] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:45:32.879 [XNIO-1 task-1] INFO  traceId[4646ce7c-157e-47cf-8669-2afa4dd02af9] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"CORBA 对象","serialNumber":1},{"correct":false,"option":"分布式对象标识","serialNumber":2},{"correct":true,"option":"伺服对象 Servant","serialNumber":3},{"correct":false,"option":"活动对象映射表","serialNumber":4}],"queSetId":2,"remark":"【2016 年题 23 解析】 【答案】C。","topicDesc":"【2016 年题 23】CORBA（Common Object Request Broker Architecture,公共对象请求代 理体系结构，通用对象请求代理体系结构）构件模型中，（XX）的作用是在底层传输平 台与接收调用并返回结果的对象实现之间进行协调，（ ）是最终完成客户请求的服务 对象实现。","topicType":1,"updateB":"0"}
2022-02-21 14:45:32.892 [XNIO-1 task-1] INFO  traceId[4646ce7c-157e-47cf-8669-2afa4dd02af9] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:46:56.687 [XNIO-1 task-1] INFO  traceId[934bb2ac-d3af-49f1-bf09-ad28e0bd91eb] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"UDDI（Universal Description，Discovery and Integration）","serialNumber":1},{"correct":false,"option":"WSDL（Web Service Description Language)","serialNumber":2},{"correct":true,"option":"SOAP（Simple Object Access Protocol）","serialNumber":3},{"correct":false,"option":"BPEL（Business Process Execution Language）","serialNumber":4}],"queSetId":2,"remark":"【2016 年题 25 解析】 UDDI 用于 Web 服务注册和服务查找； WSDL 用于描述 Web 服务的接口和操作功能； SOAP 为建立 Web 服务和服务请求之间的通信提供支持。 BPEL 翻译成中文的意思是面向 Web 服务的业务流程执行语言，也有的文献简写成 BPEL4WS，它是一种使用 Web 服务定义和执行业务流程的语言。使用 BPEL，用户可以通 过组合、编排和协调 Web 服务自上而下地实现面向服务的体系结构（SOA）。BPEL 提供 了一种相对简单易懂的方法，可将多个 Web 服务组合到一个新的复合服务（称作业务流程） 中。【答案】：C。","topicDesc":"【2016 年题 25】面向服务系统构建过程中，（ ）用于实现 Web 服务的远程调用","topicType":1,"updateB":"0"}
2022-02-21 14:46:56.716 [XNIO-1 task-1] INFO  traceId[934bb2ac-d3af-49f1-bf09-ad28e0bd91eb] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:47:38.108 [XNIO-1 task-1] INFO  traceId[b8d0cd44-0695-4bf3-a358-0987ab33c0f6] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"UDDI（Universal Description，Discovery and Integration）","serialNumber":1},{"correct":false,"option":"WSDL（Web Service Description Language)","serialNumber":2},{"correct":false,"option":"SOAP（Simple Object Access Protocol）","serialNumber":3},{"correct":true,"option":"BPEL（Business Process Execution Language）","serialNumber":4}],"queSetId":2,"remark":"【2016 年题 25 解析】 UDDI 用于 Web 服务注册和服务查找； WSDL 用于描述 Web 服务的接口和操作功能； SOAP 为建立 Web 服务和服务请求之间的通信提供支持。 BPEL 翻译成中文的意思是面向 Web 服务的业务流程执行语言，也有的文献简写成 BPEL4WS，它是一种使用 Web 服务定义和执行业务流程的语言。使用 BPEL，用户可以通 过组合、编排和协调 Web 服务自上而下地实现面向服务的体系结构（SOA）。BPEL 提供 了一种相对简单易懂的方法，可将多个 Web 服务组合到一个新的复合服务（称作业务流程） 中。【答案】：D。","topicDesc":"【2016 年题 25】面向服务系统构建过程中，（XX）用于实现 Web 服务的远程调用，（ ） 用来将分散的、功能单一的 Web 服务组织成一个复杂的有机应用。","topicType":1,"updateB":"0"}
2022-02-21 14:47:38.123 [XNIO-1 task-1] INFO  traceId[b8d0cd44-0695-4bf3-a358-0987ab33c0f6] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 14:49:43.032 [XNIO-1 task-1] INFO  traceId[82af2da5-02b7-4f83-8235-3016b01e9b4e] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"JDBC、JCA 和 Java IDL","serialNumber":1},{"correct":false,"option":"JDBC、JCA 和 JMS","serialNumber":2},{"correct":false,"option":"JDBC、JMS 和 Java IDL","serialNumber":3},{"correct":true,"option":"JCA、JMS 和 Java IDL","serialNumber":4}],"queSetId":2,"remark":"【2016 年题 26 解析】 JCA 标准化连接子是由 J2EE 1.3 首先提出的，它位于 J2EE 应用服务器和企业信息系 统（EIS）之间，比如数据库管理、企业资源规划（ERP）、企业资产管理（EAM）和客户 关系管理（CRM）系统。不是用 Java 开发的企业应用或者在 J2EE 框架内的应用都可以通 过 JCA 连接。 JMS 是 Java 对消息系统的访问机制，但它本身并不实现消息。JMS 支持点对点分发 的消息队列，也支持多个目标订阅的消息主题。当消息发布给一个主题的适合，消息就会发 送给所有那个主题的订阅者。JMS 支持各种消息类型（二进制、流、名－值表、序列化的 对象和文本）。通过声明与 SQL 的 WHERE 相近的句段，可以建立消息的过滤器。 Java IDL 即 idltojava 编译器就是一个 ORB，可用来在 Java 语言中定义、实现和访问 CORBA 对象。Java IDL 支持的是一个瞬间的 CORBA（Common Object Request Broker Architecture,公共对象请求代理体系结构，通用对象请求代理体系结构）对象，即在对象服 务器处理过程中有效。实际上，Java IDL 的 ORB 是一个类库而已，并不是一个完整的平台 软件，但它对 Java IDL 应用系统和其他 CORBA 应用系统之间提供了很好的底层通信支持， 实现了 OMG 定义的 ORB 基本功能。 【答案】：D。","topicDesc":"【2016 年题 26】基于 JavaEE 平台的基础功能服务构建应用系统时，（ ）可用来集成 遗产系统。","topicType":1,"updateB":"0"}
2022-02-21 14:49:43.062 [XNIO-1 task-1] INFO  traceId[82af2da5-02b7-4f83-8235-3016b01e9b4e] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 16:54:17.832 [XNIO-1 task-1] INFO  traceId[b06ba3d4-b351-49cb-9411-85305cd9a7c8] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"\\profile\\upload\\common-resource\\pmp\\76c8191a-e017-43f2-9358-947a2c0b7934.png","optionItem":[{"correct":true,"option":"证书机构 CA","serialNumber":1},{"correct":false,"option":"注册机构 RA","serialNumber":2},{"correct":false,"option":"证书发布系统","serialNumber":3},{"correct":false,"option":"PKI 策略","serialNumber":4}],"queSetId":2,"remark":"【2012 年题 8 解析】在 PKI 系统体系中，证书机构 CA 负责生成和签署数字证书，注册机构 RA 负责验证申请数字证书用户的身份。 【答案】A。","topicDesc":"【2012 年题 8】下图所示 PKI 系统结构中，负责生成和签署数字证书的是( )，负责验证用户身份的是( )。","topicType":1,"updateB":"0"}
2022-02-21 16:54:17.863 [XNIO-1 task-1] INFO  traceId[b06ba3d4-b351-49cb-9411-85305cd9a7c8] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 16:54:54.270 [XNIO-1 task-1] INFO  traceId[f69c9917-1e87-42e6-b9b6-433bfe9c0f5d] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"\\profile\\upload\\common-resource\\pmp\\76c8191a-e017-43f2-9358-947a2c0b7934.png","optionItem":[{"correct":false,"option":"证书机构 CA","serialNumber":1},{"correct":true,"option":"注册机构 RA","serialNumber":2},{"correct":false,"option":"证书发布系统","serialNumber":3},{"correct":false,"option":"PKI 策略","serialNumber":4}],"queSetId":2,"remark":"【2012 年题 8 解析】在 PKI 系统体系中，证书机构 CA 负责生成和签署数字证书，注册机构 RA 负责验证申请数字证书用户的身份。 【答案】B。","topicDesc":"【2012 年题 8】下图所示 PKI 系统结构中，负责验证用户身份的是( )。","topicType":1,"updateB":"0"}
2022-02-21 16:54:54.285 [XNIO-1 task-1] INFO  traceId[f69c9917-1e87-42e6-b9b6-433bfe9c0f5d] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 16:59:58.772 [XNIO-1 task-1] INFO  traceId[9e2ff236-8fc3-4e71-a18a-ffe992369b9f] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"Kerberos 认证服务中保存数字证书的服务器叫 CA","serialNumber":1},{"correct":true,"option":"第三方认证服务的两种体制分别是 Kerberos 和 PKI","serialNumber":2},{"correct":false,"option":"PKI 体制中保存数字证书的服务器叫 KDC","serialNumber":3},{"correct":false,"option":"Kerberos 的中文全称是“公钥基础设施”","serialNumber":4}],"queSetId":2,"remark":"【2013 年题 35 解析】Kerberos 可以防止偷听和重放攻击，保护数据的完整性。Kerberos 的安全机制如下。AS(Authentication Servet)：认证服务器，是为用户发放 TGT 的服务器。 TGS(Ticket GrantingServer)：票证授予服务器，负责发放访问应用服务器时需要的票证。认证服务器和票据授予服务器组成密钥分发中心(Key DistributionCenter，KDC)。 V：用户请求访问的应用服务器。TGT(Ticket Granting Ticket)：用户向 TGS 证明自己身份的初始票据，即 KTGS(A，KS)。 公钥基础结构(Public Key Infrastructure，PKI)是运用公钥的概念和技术来提供安全服务的、普遍适用的网络安全基础设施，包括由 PKI 策略、软硬件系统、认证中心、注册机构(RegistrationAuthority，RA)、证书签发系统和 PKI 应用等构成的安全体系。 【答案】B。","topicDesc":"【2013 年题 35】以下关于第三方认证服务的叙述中，正确的是( )。","topicType":1,"updateB":"0"}
2022-02-21 16:59:58.804 [XNIO-1 task-1] INFO  traceId[9e2ff236-8fc3-4e71-a18a-ffe992369b9f] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 17:03:56.096 [XNIO-1 task-1] INFO  traceId[c4ac3136-8878-412d-89af-936e6bacaf0c] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"篡改管理信息：通过改变传输中的 SNMP 报文实施未经授权的管理操作","serialNumber":1},{"correct":true,"option":"通信分析：第三者分析管理实体之间的通信规律，从而获取管理信息","serialNumber":2},{"correct":false,"option":"假冒合法用户：未经授权的用户冒充授权用户，企图实施管理操作","serialNumber":3},{"correct":false,"option":"消息泄露：SNMP 引擎之间交换的信息被第三者偷听","serialNumber":4}],"queSetId":2,"remark":"【2011 年题 47 解析】在网络管理中要防止各种安全威胁。安全威胁分为主要和次要两类，其中主要的威胁有：(1)篡改管理信息：通过改变传输中的 SNMP 报文实施未经授权的管理操作。(2)假冒合法用户：未经授权的用户冒充授权用户。企图实施管理操作次要的威胁为：(1)消息泄露：SNMP 引擎之间交换的信息被第三者偷听。(2)修改报文流：由于 SNMP 协议通常是基于无连接的传输服务，重新排序报文流、延迟或重放报文的威胁都可能出现。这种威胁的危害性在于通过报文流的修改可能实施非法的管理操作。另外有两种威胁是安全体系结构不必防护的，因为不重要或者是无法预防。(1)拒绝服务：因为很多情况下拒绝服务和网络失效是无法区别的，所以可以由网络管理协议来处理，安全系统不必采取措施。(2)通信分析：第三者分析管理实体之间的通信规律，从而获取管理信息。 【答案】B。","topicDesc":"【2011 年题 47】在网络管理中要防止各种安全威胁。在 SNMP 中，无法预防的安全威胁是( )。","topicType":1,"updateB":"0"}
2022-02-21 17:03:56.129 [XNIO-1 task-1] INFO  traceId[c4ac3136-8878-412d-89af-936e6bacaf0c] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 17:07:59.965 [XNIO-1 task-1] INFO  traceId[6ed3e133-656c-4c1f-aa85-0ff35c5912cf] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"RSA","serialNumber":1},{"correct":false,"option":"SSL","serialNumber":2},{"correct":false,"option":"SET","serialNumber":3},{"correct":true,"option":"S/MIME","serialNumber":4}],"queSetId":2,"remark":"【2017 年题 10 解析】MIME(Multipurpose Internet Mail Extensions)中文名为：多用途互联网邮件扩展类型。S/MIME (Secure Multipurpose Internet Mail Extensions)是对 MIME 在安全方面的扩展。它可以把 MIME 实体(比如数字签名和加密信息等)封装成安全对象。增强安全服务，例如具有接收方确认签收的功能，这样就可以确保接收者不能否认已经收到过的邮件。还可以用于提供数据保密、完整性保护、认证和鉴定服务等功能。S/MIME 只保护邮件的邮件主体，对头部信息则不进行加密，以便让邮件成功地在发送者和接收者的网关之间传递。 【答案】：D。","topicDesc":"【2017 年题 10】下面可提供安全电子邮件服务的是( )。","topicType":1,"updateB":"0"}
2022-02-21 17:07:59.998 [XNIO-1 task-1] INFO  traceId[6ed3e133-656c-4c1f-aa85-0ff35c5912cf] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 17:10:42.519 [XNIO-1 task-1] INFO  traceId[89bd33c5-f359-498d-b73a-bb27321952a3] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"\\profile\\upload\\common-resource\\pmp\\44af3a9b-1ac6-48d5-a405-9560f808172c.png","optionItem":[{"correct":false,"option":"IDS","serialNumber":1},{"correct":false,"option":"防火墙","serialNumber":2},{"correct":true,"option":"网闸","serialNumber":3},{"correct":false,"option":"UTM","serialNumber":4}],"queSetId":2,"remark":"【2017 年题 40 解析】IDS：即入侵检测系统，这个系统会根据操作行为的特征或是异常行径来判断，是不是一次入侵行为。像杀毒软件就用到了入侵检测系统的原理，通过特征识别病毒。防火墙：作用是内外网之间的隔离。外网的请求要到内网，必须通过防火墙，所以防火墙能使用一些判断规则来把一些恶意行为拒之门外。但如果攻击本身来自内网，防火墙就无能为力了。网闸：一个物理离隔离装置，与 IDS 与防火墙不同，网闸连接的两个网络是不相通的。网闸与内网相联时，会断开与外网的连接，与外网相联时，会断开与内网的连接。UTM 安全设备的定义是指一体化安全设备，它具备的基本功能包括网络防火墙、网络入侵检测/防御和网关防病毒功能，但这几项功能并不一定要同时得到使用，不过它们应该是 UTM 设备自身固有的功能。对于政务网的安全需求是在公网和外网之间实行逻辑隔离，在内网和外网之间实行物理隔离。网闸其实就是模拟人工数据倒换，利用中间数据倒换区，分时地与内外网连接，但一个时刻只与一个网络连接，保持“物理的分离”，实现数据的倒换。 【答案】C。","topicDesc":"【2017 年题 40】在网络规划中，政府内外网之间应该部署网络安全防护设备。在下图中部署的设各 A 是( )","topicType":1,"updateB":"0"}
2022-02-21 17:10:42.549 [XNIO-1 task-1] INFO  traceId[89bd33c5-f359-498d-b73a-bb27321952a3] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 17:11:23.637 [XNIO-1 task-1] INFO  traceId[3c464e02-1719-4b8f-8f5f-4cd1daf0aa43] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"\\profile\\upload\\common-resource\\pmp\\44af3a9b-1ac6-48d5-a405-9560f808172c.png","optionItem":[{"correct":false,"option":"双主机系统，即使外网被黑客攻击瘫痪也无法影响到内网","serialNumber":1},{"correct":false,"option":"可以防止外部主动攻击","serialNumber":2},{"correct":true,"option":"采用专用硬件控制技术保证内外网的实时链接","serialNumber":3},{"correct":false,"option":"设备对外网的任何响应都是对内网用户请求的应答","serialNumber":4}],"queSetId":2,"remark":"【2017 年题 40 解析】IDS：即入侵检测系统，这个系统会根据操作行为的特征或是异常行径来判断，是不是一次入侵行为。像杀毒软件就用到了入侵检测系统的原理，通过特征识别病毒。防火墙：作用是内外网之间的隔离。外网的请求要到内网，必须通过防火墙，所以防火墙能使用一些判断规则来把一些恶意行为拒之门外。但如果攻击本身来自内网，防火墙就无能为力了。网闸：一个物理离隔离装置，与 IDS 与防火墙不同，网闸连接的两个网络是不相通的。网闸与内网相联时，会断开与外网的连接，与外网相联时，会断开与内网的连接。UTM 安全设备的定义是指一体化安全设备，它具备的基本功能包括网络防火墙、网络入侵检测/防御和网关防病毒功能，但这几项功能并不一定要同时得到使用，不过它们应该是 UTM 设备自身固有的功能。对于政务网的安全需求是在公网和外网之间实行逻辑隔离，在内网和外网之间实行物理隔离。网闸其实就是模拟人工数据倒换，利用中间数据倒换区，分时地与内外网连接，但一个时刻只与一个网络连接，保持“物理的分离”，实现数据的倒换。 【答案】C。","topicDesc":"【2017 年题 40】在网络规划中，政府内外网之间应该部署网络安全防护设备。对设备 A 的作用描述错误的是( )。","topicType":1,"updateB":"0"}
2022-02-21 17:11:23.656 [XNIO-1 task-1] INFO  traceId[3c464e02-1719-4b8f-8f5f-4cd1daf0aa43] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 17:17:03.088 [XNIO-1 task-1] INFO  traceId[6e6ae976-a961-478e-87d3-9ae13374c7f5] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"发送大量 ARP 报文造成网络拥塞","serialNumber":1},{"correct":true,"option":"伪造网关 ARP 报文使得数据包无法发送到网关","serialNumber":2},{"correct":false,"option":"ARP 攻击破坏了网络的物理连通性","serialNumber":3},{"correct":false,"option":"ARP 攻击破坏了网关设备","serialNumber":4}],"queSetId":2,"remark":"【2010 年题 53 解析】本题主要考查 ARP 攻击的定义和特点。ARP 攻击是针对以太网地址解析协议（ARP）的一种攻击技术，此种攻击可让攻击者取得局域网上的数据封包甚至可篡改封包，且可让网络上特定计算机或所有计算机无法正常连接。ARP 攻击造成网络无法跨网段通信的原因是伪造网关 ARP 报文使得数据包无法发送到网关。【答案】B。","topicDesc":"【2010 年题 53】ARP 攻击造成网络无法跨网段通信的原因是( )。","topicType":1,"updateB":"0"}
2022-02-21 17:17:03.121 [XNIO-1 task-1] INFO  traceId[6e6ae976-a961-478e-87d3-9ae13374c7f5] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 17:20:14.184 [XNIO-1 task-1] INFO  traceId[4725b02a-202b-46b4-a7dd-99bea62b9d1f] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":true,"option":"SQL 注入攻击","serialNumber":1},{"correct":false,"option":"Land 攻击","serialNumber":2},{"correct":false,"option":"Ping of Death","serialNumber":3},{"correct":false,"option":"Teardrop 攻击","serialNumber":4}],"queSetId":2,"remark":"【2014 年题 42】【答案】A。","topicDesc":"【2014 年题 42】下列攻击方式中，( )不是利用 TCP/IP 漏洞发起的攻击。","topicType":1,"updateB":"0"}
2022-02-21 17:20:14.216 [XNIO-1 task-1] INFO  traceId[4725b02a-202b-46b4-a7dd-99bea62b9d1f] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
2022-02-21 17:23:32.410 [XNIO-1 task-1] INFO  traceId[798b9476-34f1-482b-9ebe-e027e91e60c6] com.example.demo.controller.TopicManageController:33 - 提交题目信息：{"createBy":"0","errorNum":1,"img":"","optionItem":[{"correct":false,"option":"这是一条静态路由","serialNumber":1},{"correct":false,"option":"这是一台直连设备","serialNumber":2},{"correct":true,"option":"该路由信息比较可靠","serialNumber":3},{"correct":false,"option":"该路由代价较小","serialNumber":4}],"queSetId":2,"remark":"【2017 年题 11 解析】管理距离是指一种路由协议的路由可信度。每一种路由协议按可靠性从高到低，依次分配一个信任等级，这个信任等级就叫管理距离。正常情况下，管理距离越小，它的优先级就越高，也就是可信度越高。一个管理距离是一个从 0-255 的整数值，0 是最可信赖的，而 255 则意味着不会有业务量通过这个路由。由此可见，管理距离是与信任相关的，只有选项 C 是相符的。【答案】C。","topicDesc":"【2017 年题 11】如果管理距离为 15，则（ ）。","topicType":1,"updateB":"0"}
2022-02-21 17:23:32.438 [XNIO-1 task-1] INFO  traceId[798b9476-34f1-482b-9ebe-e027e91e60c6] com.example.demo.Interceptor.LogInterceptor:45 - 调用结束后删除...
